generate_mapper:
  stage: build
  script:
    - git clone ssh://git@appgit.yealink.com:10022/suw/PyConfigUtils.git utils
    - virtualenv utils/venv
    - source utils/venv/bin/activate
    - pip install -r utils/requirements.txt
    - python utils/__main__.py split --ini ini/configMapper.xml --dbx dbx/configMapper.xml configiddefine.h
  artifacts:
    name: "configMapper_${CI_BUILD_REF_NAME}"
    paths:
      - ini
      - dbx
    expire_in: 1 week

validate:
  stage: test
  script:
    - git clone ssh://git@appgit.yealink.com:10022/suw/PyConfigUtils.git utils
    - virtualenv utils/venv
    - source utils/venv/bin/activate
    - pip install -r utils/requirements.txt
    - python utils/__main__.py validate configiddefine.h

commit_module:
  stage: deploy
  script:
    - git clone ssh://git@appgit.yealink.com:10022/suw/PyBuildServerHelper.git utils
    - virtualenv utils/venv
    - source utils/venv/bin/activate
    - pip install -r utils/requirements.txt
    - python utils/__main__.py --username $AUTO_COMMIT_USERNAME --password $AUTO_COMMIT_PASSWORD -vvv commit -m configMapper "34.$CI_BUILD_REF_NAME" 87 ini/configMapper.xml "git @ $CI_BUILD_REF" -m configMapper "66.$CI_BUILD_REF_NAME" 87 dbx/configMapper.xml "git @ $CI_BUILD_REF" --force
  only:
    - tags
