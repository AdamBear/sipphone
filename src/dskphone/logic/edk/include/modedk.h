#ifndef __MOD_EDK_H__
#define __MOD_EDK_H__
#include "edk_def.h"
#include <ETLLib.hpp>

/************************************************************************/
// 函数描述  ： Edk模块初始化
// 参数说明 ： 无
// 返回值 ： 无
/************************************************************************/
void Edk_Init();

/************************************************************************/
// 函数描述  ： Edksoftkey的响应
// 参数说明 ： [in] eType:edksoftkey类型
// 返回值 ： bool
/************************************************************************/
bool Edk_OnEdkSoftKeyPress(EDKSOFTKEYTYPE eType);

/************************************************************************/
// 函数描述  ： 获取edksoftkey的label
// 参数说明 ： [in] iType:edksoftkey类型
// 返回值 ： yl::string
/************************************************************************/
yl::string Edk_GetEdkSoftKeyLabel(EDKSOFTKEYTYPE eType);

/************************************************************************/
// 函数描述  ： 获取edksoftkey的softkey id
// 参数说明 ： [in] iType:edksoftkey类型
// 返回值 ： yl::string
/************************************************************************/
yl::string Edk_GetEdkSoftKeyID(EDKSOFTKEYTYPE eType);

/************************************************************************/
// 函数描述  ： 获取edksoftkey的type
// 参数说明 ： [in] strSoftkeyID:softkey标识ID
// 返回值 ： EDKSOFTKEYTYPE
/************************************************************************/
EDKSOFTKEYTYPE Edk_GetEdkSoftKeyType(const yl::string & strSoftkeyID);

/************************************************************************/
// 函数描述  ： 提供给ui数据
// 参数说明 ：
// 返回值 ： void
/************************************************************************/
void Edk_GetEdkSoftKeyList(YLList<SoftKey_Data> & listSoftKey);

/************************************************************************/
// 函数描述  ： EDK功能是否开启
// 参数说明 ：
// 返回值 ： void
/************************************************************************/
bool Edk_IsEnable();

/************************************************************************/
// 函数描述  ： 获取prompt数据
// 参数说明 ：
// 返回值 ： bool
/************************************************************************/
bool Edk_GetPromptByIndex(int iIndex, edk_prompt_data_t & promptData);

/************************************************************************/
// 函数描述  ： 获取dsskey的数据
// 参数说明 ： [in] iDsskeyID: [in] eType:edk的action类型
// 返回值 ： bool
/************************************************************************/
yl::string Edk_GetDsskeyData(int iDsskeyid, EDKACTIONTYPE eType);

/************************************************************************/
// 函数描述  ： EDK是否允许进入提示模式
// 参数说明 ：
// 返回值 ： bool
/************************************************************************/
bool EDK_IsTipModeEnable();

/************************************************************************/
// 函数描述  ： EDK设置提示模式开关
// 参数说明 ： [in] bSet:提示模式设置为开或者关
// 返回值 ： bool:是否设置成功
/************************************************************************/
bool EDK_SetTipMode(bool bEnable);

/************************************************************************/
// 函数描述: EDK执行接口
// 参数说明: [in] iDsskeyId:dsskey的id
//          如果是点灯,id为dsskey id:EDK内部控制亮灯 iDsskeyId<-1:外部自行控制亮灯
// 参数说明: [in] strAction:edk命令字符串
// 返回值:   bool
/************************************************************************/
bool EDK_DoAction(const yl::string & strAction, int iDsskeyId = -1,
                  EDKTRIGGERTYPE eTriggerType = EDK_TRIGGER);

/************************************************************************/
// 函数描述  ： EDK获取dsskey的显示数据
// 参数说明 ： [in] iDsskeyId:dsskey的id
// 参数说明 ： [in] objDisplayData:dsskey的显示数据
// 返回值 ： bool
/************************************************************************/
bool EDK_GetEdkCtrlDsskeyDispData(int iDsskeyId, EdkCtrlDsskeyDispData & objDisplayData);

bool EDK_DoAction(int iActionId);

#endif // __MOD_EDK_H__
